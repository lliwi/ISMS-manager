services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: isms_db
      POSTGRES_USER: isms
      POSTGRES_PASSWORD: isms_secure_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - isms_network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U isms -d isms_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flask Application
  web:
    build: .
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://isms:isms_secure_password@db:5432/isms_db
      - SECRET_KEY=your-production-secret-key-change-this
      - AI_VERIFICATION_ENABLED=${AI_VERIFICATION_ENABLED:-False}
      - AI_PROVIDER=${AI_PROVIDER:-ollama}
      - AI_MODEL=${AI_MODEL:-llama3:8b}
      - AI_API_KEY=${AI_API_KEY:-}
      - AI_BASE_URL=${AI_BASE_URL:-http://localhost:11434}
      - AI_TIMEOUT=${AI_TIMEOUT:-120}
      - KNOWLEDGE_BASE_PATH=${KNOWLEDGE_BASE_PATH:-knowledge}
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./services:/app/services
      - ./knowledge:/app/knowledge
      - ./config.py:/app/config.py
      - ./blueprints:/app/blueprints
      - ./models.py:/app/models.py
    depends_on:
      db:
        condition: service_healthy
    networks:
      - isms_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./static:/app/static:ro
    depends_on:
      - web
    networks:
      - isms_network
    restart: always

  # Redis (for future session storage and caching)
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - isms_network
    restart: always
    command: redis-server --appendonly yes

  # Ollama AI Service (Optional - for document verification)
  # Uncomment to enable local AI document verification
  # ollama:
  #   image: ollama/ollama:latest
  #   ports:
  #     - "11434:11434"
  #   volumes:
  #     - ollama_data:/root/.ollama
  #   networks:
  #     - isms_network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

volumes:
  postgres_data:
  redis_data:
  # ollama_data:  # Uncomment if using Ollama service

networks:
  isms_network:
    driver: bridge